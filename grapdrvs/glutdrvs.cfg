
;Using WNT graphics library, you can set the view/trans. windows location using
;The two variables below as 'x1, x2, y1, y2'. However, since both share the same
;parent window, x1, y1 of ViewPrefPos sets the positions. The (same) height of
;both windows is set as the maximal height of the Trans and View windows.
TransPrefPos	"500, 600,   1, 500"
ViewPrefPos	"1,   500,   1, 500"

;Default background color (RGB scalars between 0 to 255).
BackGround	"0 0 0"

;Highlight 1 and 2 colors (RGB scalars between 0 to 255).
Highlight1	"255 0 255"
Highlight2	"255 200 100"

;Sets the light source position as (X, Y, Z, W).
;W of 0.0 denotes a light source at infinity.
;Not really used in this device.
LightSrcPos	"1.0,  2.0,   1.0, 0.0"

;Sets the second light source position as (X, Y, Z, W).
;W of 0.0 denotes a light source at infinity.
;Not really used in this device.
LightSrcPos2	"-1.0, -1.0,   3.0, 0.0"

;Name of command/program to execute every iteration of animation sequence.
ExecAnimCmd	""

;Should hold Min,Max,Dt{,s} for automatic animation on startup.
ExecAnimation	""

;If true, display INTERNAL edges (created by IRIT solid modeller) (option -i)
;Internal	TRUE

;Draw vertices normals using normal length if TRUE and vertex has
;normal attribute ([NORMAL X Y Z]).
DrawVNormal	FALSE

;Draw polygons normals using normal length if TRUE and polygon has
;plane attribute ([PLANE A B C D]).
DrawPNormal	FALSE

;Do we want to be more talkative!?
MoreVerbose	FALSE

;If TRUE, enforce a unit matrix.
UnitMatrix	FALSE

;If TRUE polygons were rendered as solid. Otherwise as wireframe.
DrawStyle	FALSE

;If TRUE back facing polygons will not be drawn.
BFaceCull	FALSE

;If TRUE double buffering will be used. Otherwise single buffer.
DoubleBuffer	TRUE

;Debug input stream by printing recieved object.
DebugObjects	FALSE

;Debug input stream by echoing input.
DebugEchoInput	FALSE

;Sets depth cue status to begin with - drawing of the lines with negative Z
; (depth) as dotted lines
DepthCue	TRUE

;Should we cache the polygonal/polyline data approximation for display?
CacheGeom	TRUE

;If TRUE four polygons are formed from each bilinear
;in the solid rendering option. Otherwise two polygons.
FourPerFlat	FALSE

;Antialiasing for lines.
AntiAlias	FALSE

;If TRUE then surfaces control mesh and curves control polygon are drawn as
;well as the surfaces/curves themselves.
DrawSurfaceMesh	FALSE

;If TRUE then objects are drawn using wireframe/polyline/isolines.
DrawSurfaceWire TRUE

;If TRUE then surfaces is subdivided into polygons which are drawn instead
;of isolines (if FALSE). NumOfIsolines control the fineness of the
;subdivision in this case.
DrawSurfacePoly FALSE

;If TRUE then surfaces are drawn using sketching style strokes.
DrawSurfaceSktc FALSE

;Is this display device should be executed stand alone or as a display
;device for IRIT.
StandAlone	TRUE

;Should we convert the surfaces to polygonal strips or just polygons.
PolyStrip	FALSE

;TRUE for indefinite continuous motion, following last applied transformation.
ContMotion	FALSE

;Number of isolines per surface. Should be at least 2.
NumOfIsolines	10

;!optimal :: Number of samples (equally spaced in parametric space) per curve.
;!optimal :: maximal deviation between curve and its approximation.
;See PolylineOpti
PllnFineNess	0.005

;Line width of line drawings, in pixels.
LineWidth	1

;Methods of optimal subdivision of surfaces into polygons.
;If 0 surfaces are converted into polygons using a fixed grid. Otherwise,
;if 1 surfaces are adaptively converted into polygons by tolerance.
PolygonOpti	0

;Methods of optimal subdivision of curves into polylines.
;If 0 curves are sampled in equally spaced intervals.
;if 1 curves are sampled to minimize dist. between curve and polyline approx.
PolylineOpti	1

;Method of shading:
; 0. No shading
; 1. Background shading
; 2. Flat shading
; 3. Gouraud shading
; 4. Phong shading
ShadingModel	4

;The transformation to begin with should be in:
; 1. Screen axes coordinate system
; 2. Object axes coordinate system
TransMode	1

;The viewing mode to begin with:
; 1. Perspective View
; 2. Orthographic view
ViewMode	2

;Vertices normal length.
NormalSize	0.1

;Sets the style of strokes to use in interactive line arts of freeforms.
;Can be one of
; 1 (isoparametric curves),
; 2 (lines of curvature),
; 3 (isoclines)
; 4 (orthoclines)
SketchSilStyle	1
SketchShdStyle	1
SketchImpStyle	3

;A mask to control which object type can be picked (262143 = 2^18-1):
;bit 0 - not used,        bit 1 - poly,         bit 2 - numeric,
;bit 3 - point,           bit 4 - vector,       bit 5 - Plane,
;bit 6 - matrix,          bit 7 - curve,        bit 8 - surface,
;bit 9 - string,          bit 10 - list object, bit 11 - ctl pt,
;bit 12 - trimmed srf,    bit 13 - trivariate,  bit 14 - instance,
;bit 15 - triangular srf, bit 16 - model,       bit 17 - multivariate.
PickObjType	262143

;Domain in Z for clipping.
ZClipMin	-2.0
ZClipMax	2.0

;Sets default FineNess for subdivision of surfaces into polygons.
PlgnFineNess	20

;Sets the width of the cross drawn for point objects.
PointSize	0.02

;If the device supports low resolution while the input device is active (i.e.
;dragging), the relative low resolution fineness will be set through here.
RelLowRes	0.3

;Minimal distance to consider for pick event.  Any object above this distance
;will be simply ignored.
PickEventDist   0.2

;Sets the portion (between zero and one) of the silhouette strokes to employ
;along silhouettes curves, in interactive line art sketches of geometry.
SketchSilPwr   0.1

;Sets the portion (between zero and one) of the shading strokes to employ
;according to the line art shader, in interactive line arts of geometry.
SketchShdPwr	0.9

;Sets the improtance decay of the strokes, in interactive line arts
;of geometry.
SketchImpDecay	2.5

;Sets the widgets that are displayed initially (as an or'ed mask):
;  1 - Environment widget            2 - Animation widget
;  4 - Curves widget                 8 - surfaces widget
; 16 - Shading widget               32 - Pick objects widget
; 64 - Object transforms widget
InitWidget	0
