#
# This solid was taken from: Geometric Modeling,
# by Michael E. Mortenson page 441, figure 10.9
#
#				Created by Gershon Elber,	Jan 89
#

t = time( true );
free( t );

save_mat = view_mat;
view_mat = view_mat * scale( vector( 0.5, 0.5, 0.5 ) );

C1 = coerce( CylinSrf( 0.4, 1.4 ), model_type );
Pln1 = coerce( PlaneSrf( -2, -2, 2, 2 ) * rx( 90 ) * ty( -0.35 ), model_type );
Pln2 = coerce( -PlaneSrf( -2, -2, 2, 2 ) * rx( 90 ) * ty( 0.35 ), model_type );

view( list( C1, Pln1, Pln2), 1);

S1 = C1 * Pln1 * pln2;
view( S1, 1 );

free( C1 );
free( Pln1 );
free( Pln2 );
view( S1, 1 );

C2 = coerce( CylinSrf( 0.4, 0.9 ) * tz( 0.00001 ), model_type );

S2 = S1 + C2;
free( C2 );
free( S1 );
view( S2, 1 );


T4 = coerce( CylinSrf( 1.0, 0.8 ) * rx( 90 )
			   * tx( 1.45 ) * ty( 0.5 ) * tz( 1.0 ), model_type );
T5 = coerce( CylinSrf( 1.0, 0.8 ) * rx( 90 )
			  * tx( -1.45 ) * ty( 0.5 ) * tz( 1.0 ), model_type );

S3 = S2 - T4 - T5;
free( T4 );
free( T5 );
free( S2 );
view( S3, 1 );


T6 = coerce( CylinSrf( 0.5, 0.1 ) * tx( 1.2 ) * tz( -0.15 ), model_type );
T7 = coerce( CylinSrf( 0.5, 0.1 ) * tx( -1.2 ) * tz( -0.15 ), model_type );

S4 = S3 - T6 - T7;
free( T6 );
free( T7 );
free( S3 );
view( S4, 1 );


T8 = coerce( CylinSrf( 1.0, 0.3 ) * tz( -0.15 ), model_type );

final = S4 - T8;
free( T8 );
free( S4 );

printf( "Total Time = %f\\n", list( time( false ) ) ); # In Seconds

save( "mdl_sld2", final );
interact( final );

free( final );

view_mat = save_mat;
