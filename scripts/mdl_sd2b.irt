#
# This solid was taken from: Geometric Modeling,
# by Michael E. Mortenson page 441, figure 10.9
#
#				Created by Gershon Elber,	Jan 89
#

t = time( true );
free( t );

save_mat = view_mat;
view_mat = view_mat * scale( vector( 0.5, 0.5, 0.5 ) );

OldPrim = iritstate( "PrimType", 2 ); # Make model-type primitives.
OldBFF = iritstate( "BoolFreeform", vector( 0.01, 1e-8, 0.01 ) );

#
# Try it with coplanar false for fun.
#
# iritstate( "coplanar", false );
#

C1 = Cylin( vector( 0.0, 0.0, 0.0 ), vector( 0.0, 0.0, 0.4 ), 1.4, 3 );
B1 = box( vector( -2, -0.35, -2 ), 4, 0.7, 4 );

S1 = C1 * B1;
free( C1 );
free( B1 );
view( S1, 1 );

C2 = Cylin( vector( 0.0, 0.0, 0.1 ), vector( 0.0, 0.0, 0.2 ), 0.9, 3 );

S2 = S1 + C2;
free( C2 );
free( S1 );
view( S2, 1 );


T4 = Cylin( vector( 1.45, -0.5, 1.0 ), vector( 0.0, 1.0, 0.0 ), 0.9, 3 );
T5 = Cylin( vector( -1.45, -0.5, 1.0 ), vector( 0.0, 1.0, 0.0 ), 0.9, 3 );

S3 = S2 - T4 - T5;
free( T4 );
free( T5 );
free( S2 );
view( S3, 1 );

T6 = Cylin( vector( 1.2, 0.0, -0.15 ), vector( 0.0, 0.0, 0.5 ), 0.1, 3 );
T7 = Cylin( vector( -1.2, 0.0, -0.15 ), vector( 0.0, 0.0, 0.5 ), 0.1, 3 );

S4 = S3 - T6 - T7;
free( T6 );
free( T7 );
free( S3 );
view( S4, 1 );


T8 = box( vector( -0.4, -0.15, -0.2 ), 0.8, 0.3, 1 );
T9 = Cylin( vector( 0.0, 0.0, -0.25 ), vector( 0.0, 0.0, 1.1 ), 0.25, 3 );

final = S4 - T8 - T9;
free( T8 );
free( S4 );

printf( "Total Time = %f\\n", list( time( false ) ) ); # In Seconds

save( "mdl_sd2b", final );
interact( final );

free( final );

view_mat = save_mat;

OldPrim = iritstate( "PrimType", OldPrim );
free( OldPrim );

OldBFF = iritstate( "BoolFreeform", OldBFF );
free( OldBFF );

