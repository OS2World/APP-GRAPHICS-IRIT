/******************************************************************************
* dither3d_2x2x2_2d.h - 2x2x2 dithering matrix for 2 images.		      *
*******************************************************************************
* (C) Gershon Elber, Technion, Israel Institute of Technology                 *
*******************************************************************************
* Written by Gershon Elber,					 July 2010.   *
******************************************************************************/

static const char Dither2Imgs3DySize2Penalty[5][5] = {
    {  0,  -1,  -1,  -2,  -2 },
    {  1,   0,   0,  -1,  -1 },
    {  1,   0,   0,   0,   0 },
    {  2,   1,   0,   0,   0 },
    {  2,   1,   0,   0,   0 }
};

static const unsigned char Dither2Imgs3DSize2Matrices[5][5][8] = {
    {
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (0 x 0 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (0 x 1 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (0 x 2 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (0 x 3 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }  /* (0 x 4 (0 OnBits)) */
    },
    {
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (1 x 0 (0 OnBits)) */
	{   0, 0,  0, 1,   0, 0,  0, 0 }, /* (1 x 1 (1 OnBits)) */
	{   0, 1,  0, 1,   0, 0,  0, 0 }, /* (1 x 2 (2 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (1 x 3 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }  /* (1 x 4 (0 OnBits)) */
    },
    {
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (2 x 0 (0 OnBits)) */
	{   0, 0,  1, 1,   0, 0,  0, 0 }, /* (2 x 1 (2 OnBits)) */
	{   0, 0,  1, 0,   0, 0,  1, 0 }, /* (2 x 2 (2 OnBits)) */
	{   0, 0,  1, 0,   1, 0,  1, 0 }, /* (2 x 3 (3 OnBits)) */
	{   1, 0,  1, 0,   1, 0,  1, 0 }  /* (2 x 4 (4 OnBits)) */
    },
    {
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (3 x 0 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (3 x 1 (0 OnBits)) */
	{   0, 1,  0, 0,   1, 1,  0, 0 }, /* (3 x 2 (3 OnBits)) */
	{   0, 1,  1, 0,   0, 0,  0, 1 }, /* (3 x 3 (3 OnBits)) */
	{   1, 0,  1, 0,   1, 0,  0, 1 }  /* (3 x 4 (4 OnBits)) */
    },
    {
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (4 x 0 (0 OnBits)) */
	{   0, 0,  0, 0,   0, 0,  0, 0 }, /* (4 x 1 (0 OnBits)) */
	{   1, 1,  0, 0,   1, 1,  0, 0 }, /* (4 x 2 (4 OnBits)) */
	{   1, 1,  0, 0,   1, 0,  0, 1 }, /* (4 x 3 (4 OnBits)) */
	{   1, 0,  0, 1,   1, 0,  0, 1 }  /* (4 x 4 (4 OnBits)) */
    }
};
